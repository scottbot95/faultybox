[config]
default_to_workspace = false
unstable_features = [ "CTRL_C_HANDLING" ]

[tasks.watch-frontend]
description = "Build, watch the Rust WASM app"
install_crate = { crate_name = "trunk", binary = "trunk", test_arg = "--version"}
command = "trunk"
args = [ "watch", "--public-url", "/assets/"]
cwd = "./frontend"

[tasks.serve-frontend]
description = "Build, watch & serve the Rust WASM app"
install_crate = { crate_name = "trunk", binary = "trunk", test_arg = "--version"}
command = "trunk"
args = ["serve", "--proxy-backend=http://[::1]:8081/api/"]
cwd = "./frontend"

[tasks.serve-backend]
description = "Build, watch and run the Rust backend server"
command = "cargo"
args = ["run", "--bin", "server", "${@}"]
watch = { watch = ["./server/", "Cargo.toml"] }

[tasks.build-frontend]
description = "Build frontend using trunk"
install_crate = { crate_name = "trunk", binary = "trunk", test_arg = "--version"}
script_runner = "@duckscript"
script = '''
exec trunk build --public-url /assets/
if is_path_exists ./assets
    cp ./assets ../dist
end
'''
cwd = "./frontend"

[tasks.build-backend]
description = "Build backend server"
command = "cargo"
args = ["build", "--bin", "server", "${@}"]

[tasks.build]
clear = true
description = "Build the frontend and backend for Gecko"
dependencies = ["build-frontend", "build-backend"]

[tasks.run-backend]
description = "Start the server locally"
command = "cargo"
args = ["run", "--bin", "server", "${@}"]

[tasks.run]
description = "Run the SPA"
dependencies = [ "build-frontend" ]
run_task = "run-backend"
